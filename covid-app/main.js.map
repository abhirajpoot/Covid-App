{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/countries/countries.component.ts","./src/app/component/countries/countries.component.html","./src/app/component/dashboard-card/dashboard-card.component.ts","./src/app/component/dashboard-card/dashboard-card.component.html","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/component/navbar/navbar.component.ts","./src/app/component/navbar/navbar.component.html","./src/app/services/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './component/home/home.component';\nimport { CountriesComponent } from './component/countries/countries.component';\n\n\n\nconst routes: Routes = [\n  { path:'',component:HomeComponent},\n  { path:'countries',component:CountriesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid-app';\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CountriesComponent } from './component/countries/countries.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DataService } from './services/data.service';\nimport { DashboardCardComponent } from './component/dashboard-card/dashboard-card.component';\nimport { Ng2GoogleChartsModule, GoogleChartsSettings } from 'ng2-google-charts';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    Ng2GoogleChartsModule\n  ],\n  providers: [ DataService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { GlobalData } from 'src/app/models/globalData';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { GoogleChartInterface } from 'ng2-google-charts';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n  country: string[] = [];\n  data: GlobalData[];\n  countries: string[] = [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeath = 0;\n  totalRecovered = 0;\n  dateWiseData;\n  selectedCountryData: DateWiseData[];\n  lineChart: GoogleChartInterface = {\n    chartType: 'PieChart',\n  }\n\n  ngOnInit(): void {\n\n    merge(\n      this.dataService.getDateWiseData().pipe(map(result => {\n        this.dateWiseData = result;\n      })\n      ),\n      this.dataService.getData().pipe(map(result => {\n        this.data = result;\n        this.data.forEach(countries => {\n          this.country.push(countries.country)\n        })\n      }))\n    ).subscribe(\n      {\n        complete: () => {\n          this.updateData('India');\n        }\n      }\n    )\n  }\n\n  updateData(country: string) {\n    console.log(country);\n    this.data.forEach(countries => {\n      if (countries.country === country) {\n        this.totalActive = countries.active;\n        this.totalConfirmed = countries.confirmed;\n        this.totalDeath = countries.death;\n        this.totalRecovered = countries.recovered;\n      }\n    })\n    this.selectedCountryData = this.dateWiseData[country];\n    this.updateChart();\n\n  }\n  updateChart() {\n    let dataTable = [];\n    dataTable.push(['Date', 'Cases']);\n    this.selectedCountryData.forEach(function (cs) {\n      dataTable.push([cs.date, cs.cases])\n    })\n    console.log('udharrr', dataTable);\n\n    this.lineChart = {\n      chartType: 'LineChart',\n      dataTable: dataTable,\n      options: {\n        height: 500,\n        animation:{\n          duration: 1000,\n          easing: 'out',\n        }\n      },\n    }\n  }\n}\n","<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Covid 19 Tracker Countrywise</h1>\n    <hr>\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" id=\"c\" class=\"form-control\" #input (change)='updateData(input.value)'>\n                <option value=\"{{con}}\" *ngFor='let con of country'>{{con}}</option>\n            </select>\n        </div>\n    </div>\n</div>\n\n<div>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalDeath]='totalDeath' [totalRecovered]='totalRecovered'\n        [totalActive]='totalActive'>\n    </app-dashboard-card>\n\n    <div class=\"row\">\n\n        <table class=\"table col\">\n            <thead>\n                <tr>\n                    <th>SNo</th>\n                    <th>Country</th>\n                    <th>Cases</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor='let con of selectedCountryData; index as i'>\n                    <td>{{i+1}}</td>\n                    <td>{{con.date | date}}</td>\n                    <td>{{con.cases}}</td>\n                </tr>\n            </tbody>\n\n        </table>\n        <div class=\"col\">\n            <google-chart [data]=\"lineChart\"></google-chart>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeath')\n  totalDeath;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"card col p-3 m-3\">\n      <div class=\"ui statistic\">\n        <div class=\"label\">\n          Confirmed\n        </div>\n        <div class=\"value\">\n          {{totalConfirmed | number}}\n        </div>\n      </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n      <div class=\"ui statistic\">\n        <div class=\"label\">\n          Recovered\n        </div>\n        <div class=\"value\">\n          {{totalRecovered | number}}\n        </div>\n      </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n      <div class=\"ui statistic\">\n        <div class=\"label\">\n          Deaths\n        </div>\n        <div class=\"value\">\n          {{totalDeath | number}}\n        </div>\n      </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n      <div class=\"ui statistic\">\n        <div class=\"label\">\n          Active\n        </div>\n        <div class=\"value\">\n          {{totalActive | number}}\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { GlobalData } from 'src/app/models/globalData';\nimport { GoogleChartInterface } from 'ng2-google-charts';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalActive = 0;\n  totalRecovered = 0;\n  totalDeath = 0;\n  totalConfirmed = 0;\n  globalData: GlobalData[];\n  datatable = [];\n  pieChart: GoogleChartInterface = {\n    chartType: 'PieChart',\n  }\n  columnChart: GoogleChartInterface = {\n    chartType: 'ColumnChart',\n  }\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n\n    this.dataService.getData().subscribe({\n      next: (result) => {\n        this.globalData = result;\n        result.forEach(cs => {\n          if (!Number.isNaN(cs.confirmed)) {\n            this.totalActive += cs.active;\n            this.totalRecovered += cs.recovered;\n            this.totalConfirmed += cs.confirmed;\n            this.totalDeath += cs.death;\n          }\n        })\n        this.initChart('r');\n      }\n    })\n  }\n  updateChart(input: HTMLInputElement) {\n    console.log('Update me hai', input.value);\n    this.initChart(input.value);\n\n  }\n  initChart(caseType: string) {\n\n    console.log('idhar hai', caseType);\n\n    this.datatable = [];\n    this.datatable.push([\"Country\", \"Cases\"])\n    this.globalData.forEach(cs => {\n      let value: number;\n      \n      if (caseType == 'a')\n        if (cs.active > 2000) {\n          this.datatable.push([\n            cs.country, cs.active\n          ])\n        }\n      if (caseType == 'd')\n        if (cs.death > 1000) {\n          this.datatable.push([\n            cs.country, cs.death\n          ])\n        }\n\n      if (caseType == 'r')\n        if (cs.recovered > 2000) {\n          this.datatable.push([\n            cs.country, cs.recovered\n          ])\n        }\n\n    })\n    console.log(this.datatable);\n\n    this.pieChart = {\n      chartType: 'PieChart',\n      dataTable: this.datatable,\n      options: {\n        height: 500,\n      },\n    };\n    this.columnChart = {\n      chartType: 'ColumnChart',\n      dataTable: this.datatable,\n      options: {\n        height: 500,\n        animation:{\n          duration: 1000,\n          easing: 'out',\n        }\n      },\n    }\n  }\n}\n","<div class=\"jumbotron bg-white text-center\">\n  <h1 class=\"display-6\">Covid 19 Tracker</h1>\n  <hr>\n  <app-dashboard-card [totalConfirmed] = 'totalConfirmed'\n  [totalDeath] = 'totalDeath' [totalRecovered] = 'totalRecovered' [totalActive] = 'totalActive'>\n  </app-dashboard-card>\n</div>\n<hr>\n<div class=\"ui form\">\n  <div class=\"inline fields\">\n    <label for=\"fruit\">Select cases type:</label>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"c\" name=\"caseType\" #c (click)='updateChart(c)' value = \"c\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"c\">Confirmed</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"d\" name=\"caseType\" #d (click)='updateChart(d)' value=\"d\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"d\">Deaths</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"a\" name=\"caseType\" #a (click) ='updateChart(a)' value=\"a\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"a\">Active</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"r\" name=\"caseType\" #r (click) ='updateChart(r)' value=\"r\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"r\">Recovered</label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col\">\n    <google-chart [data]=\"columnChart\" ></google-chart>    \n  </div>\n  <div class=\"col\">\n    <google-chart [data]=\"pieChart\"></google-chart>\n  </div>   \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-primary navbar-fixed-top\">\n    <a class=\"navbar-brand\" href=\"/\">\n        <img src=\"assets/images/covid.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n        Covid-19 Tracker</a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink='/'>Home <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='countries'>Country</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { GlobalData } from '../models/globalData';\nimport { DateWiseData } from '../models/date-wise-data';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private globalDataUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/07-05-2020.csv';\n  private datewiseDataUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv';\n  constructor(private http: HttpClient) { }\n\n  getData(){\n    return this.http.get(this.globalDataUrl, {responseType : 'text'}).pipe(\n      map(result => {\n        let rows = result.split('\\n');\n        rows.splice(0,1);\n        let raw = {};\n        let data: GlobalData[] = [];\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n         // console.log(cols)\n         let cs = {\n          country:cols[3],\n          confirmed: +cols[7],\n          death : +cols[8],\n          recovered : +cols[9],\n          active : +cols[10]\n         }\n         let temp : GlobalData=raw[cs.country];\n         if(temp){\n           temp.active = cs.active + temp.active;\n           temp.confirmed = cs.confirmed + temp.confirmed;\n           temp.death = cs.death + temp.death;\n           temp.recovered = cs.recovered + temp.recovered;\n           raw[cs.country] = temp;\n         }\n         else{\n           raw[cs.country] = cs;\n         }\n        });    \n        return <GlobalData[]>Object.values(raw);\n      })\n    );\n  }\n  getDateWiseData(){\n    return this.http.get(this.datewiseDataUrl,{responseType : 'text'}).pipe(\n      map( result => {\n        let rows = result.split('\\n');\n        //console.log(rows);\n        let data = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/);\n        dates.splice(0,4);\n        rows.splice(0,1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n          let con = cols[1];\n          cols.splice(0,4);\n          //console.log(con,cols);      \n          data[con] = [];\n          cols.forEach((value,index) => {\n            let dw : DateWiseData = {\n              cases: +value,\n              country: con,\n              date: new Date(Date.parse(dates[index]))\n\n            }\n            data[con].push(dw);\n          })\n        })\n       // console.log(data);\n        return data;\n      })\n      \n      \n      \n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}